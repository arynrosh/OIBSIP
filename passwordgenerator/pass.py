# PASSWORD GENERATOR BY ARYAN ROSHAN

import tkinter as tk
from tkinter import messagebox
import random
import string
import pyperclip

class PasswordGenerator:
    def __init__(self, root):
        self.root = root
        self.root.title("Password Generator by Aryan Roshan")

        # Implementation of buttons, checkboxes and entries for the generator

        tk.Label(root, text="Password Length:").grid(row=0, column=0, padx=10, pady=10)
        self.length_entry = tk.Entry(root)
        self.length_entry.grid(row=0, column=1, padx=10, pady=10)

        self.include_uppercase = tk.BooleanVar()
        self.uppercase_check = tk.Checkbutton(root, text="Include Uppercase", variable=self.include_uppercase)
        self.uppercase_check.grid(row=1, column=0, columnspan=2)

        self.include_numbers = tk.BooleanVar()
        self.numbers_check = tk.Checkbutton(root, text="Include Numbers", variable=self.include_numbers)
        self.numbers_check.grid(row=2, column=0, columnspan=2)

        self.include_symbols = tk.BooleanVar()
        self.symbols_check = tk.Checkbutton(root, text="Include Symbols", variable=self.include_symbols)
        self.symbols_check.grid(row=3, column=0, columnspan=2)

        self.exclude_similar = tk.BooleanVar()
        self.similar_check = tk.Checkbutton(root, text="Exclude Similar Characters", variable=self.exclude_similar)
        self.similar_check.grid(row=4, column=0, columnspan=2)

        self.generate_button = tk.Button(root, text="Generate Password", command=self.generate_password)
        self.generate_button.grid(row=5, column=0, columnspan=2, pady=10)

        tk.Label(root, text="Generated Password:").grid(row=6, column=0, padx=10, pady=10)
        self.password_entry = tk.Entry(root, width=50)
        self.password_entry.grid(row=6, column=1, padx=10, pady=10)

        self.copy_button = tk.Button(root, text="Copy to Clipboard", command=self.copy_to_clipboard)
        self.copy_button.grid(row=7, column=0, columnspan=2, pady=10)

    def generate_password(self):
        length = self.length_entry.get()
        if not length.isdigit() or int(length) < 1:
            messagebox.showerror("Invalid Input", "Please enter a valid password length.") # Error if there is no input from the user.
            return

        length = int(length)
        char_set = string.ascii_lowercase
        if self.include_uppercase.get():
            char_set = char_set + string.ascii_uppercase # Adds uppercase characters if user chooses
        if self.include_numbers.get():
            char_set = char_set + string.digits # Adds digits if user chooses
        if self.include_symbols.get():
            char_set = char_set + string.punctuation # Adds punctuation if user chooses

        if self.exclude_similar.get():
            for ch in 'il1Lo0O':
                char_set = char_set.replace(ch, '') #Excludes similar characters if user chooses

        password = ''.join(random.choice(char_set) for _ in range(length)) # Password is generated using the selected character set and length
        self.password_entry.delete(0, tk.END)
        self.password_entry.insert(0, password)

    def copy_to_clipboard(self):
        password = self.password_entry.get()
        if password:
            pyperclip.copy(password)
            messagebox.showinfo("Copied", "Password copied to clipboard!") # Password can be copied to clipboard if generated by user
        else:
            messagebox.showerror("Error", "No password to copy.")

if __name__ == "__main__":
    root = tk.Tk()
    app = PasswordGenerator(root)
    root.mainloop()
